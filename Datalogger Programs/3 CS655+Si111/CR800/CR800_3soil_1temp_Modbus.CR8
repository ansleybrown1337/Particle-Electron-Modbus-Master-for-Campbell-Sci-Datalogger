'CR800 Series
'Created by Short Cut (4.0)

'Declare Variables and Units
Dim TT_K
Dim SBT_K
Dim m
Dim b
Public BattV
Public PTemp_C
Public CS65X(6)
Public CS65X_2(6)
Public CS65X_3(6)
Public TT_C
Public SBT_C
Public TTmV
Public Modbus(14) As Long
Public ModbusCoil(8) As Boolean

Alias CS65X(1)=VWC_0
Alias CS65X(2)=EC_0
Alias CS65X(3)=T_0
Alias CS65X(4)=P_0
Alias CS65X(5)=PA_0
Alias CS65X(6)=VR_0
Alias CS65X_2(1)=VWC_1
Alias CS65X_2(2)=EC_1
Alias CS65X_2(3)=T_1
Alias CS65X_2(4)=P_1
Alias CS65X_2(5)=PA_1
Alias CS65X_2(6)=VR_1
Alias CS65X_3(1)=VWC_2
Alias CS65X_3(2)=EC_2
Alias CS65X_3(3)=T_2
Alias CS65X_3(4)=P_2
Alias CS65X_3(5)=PA_2
Alias CS65X_3(6)=VR_2

Units BattV=Volts
Units PTemp_C=Deg C
Units TT_C=Deg C
Units SBT_C=Deg C
Units VWC_0=m^3/m^3
Units EC_0=dS/m
Units T_0=Deg C
Units P_0=unitless
Units PA_0=nSec
Units VR_0=unitless
Units VWC_1=m^3/m^3
Units EC_1=dS/m
Units T_1=Deg C
Units P_1=unitless
Units PA_1=nSec
Units VR_1=unitless
Units VWC_2=m^3/m^3
Units EC_2=dS/m
Units T_2=Deg C
Units P_2=unitless
Units PA_2=nSec
Units VR_2=unitless

'Define Data Tables
DataTable(Hourly,True,-1)
	DataInterval(0,60,Min,10)
	Average(1,VWC_0,FP2,False)
	Average(1,EC_0,FP2,False)
	Average(1,T_0,FP2,False)
	Average(1,P_0,FP2,False)
	Average(1,PA_0,FP2,False)
	Average(1,VR_0,FP2,False)
	Average(1,VWC_1,FP2,False)
	Average(1,EC_1,FP2,False)
	Average(1,T_1,FP2,False)
	Average(1,P_1,FP2,False)
	Average(1,PA_1,FP2,False)
	Average(1,VR_1,FP2,False)
	Average(1,VWC_2,FP2,False)
	Average(1,EC_2,FP2,False)
	Average(1,T_2,FP2,False)
	Average(1,P_2,FP2,False)
	Average(1,PA_2,FP2,False)
	Average(1,VR_2,FP2,False)
	Average(1,TT_C,FP2,False)
	Average(1,SBT_C,FP2,False)
EndTable

DataTable(Daily,True,-1)
	DataInterval(0,1440,Min,10)
	Minimum(1,BattV,FP2,False,False)
	Average(1,VWC_0,FP2,False)
	Average(1,EC_0,FP2,False)
	Average(1,T_0,FP2,False)
	Average(1,P_0,FP2,False)
	Average(1,PA_0,FP2,False)
	Average(1,VR_0,FP2,False)
	Average(1,VWC_1,FP2,False)
	Average(1,EC_1,FP2,False)
	Average(1,T_1,FP2,False)
	Average(1,P_1,FP2,False)
	Average(1,PA_1,FP2,False)
	Average(1,VR_1,FP2,False)
	Average(1,VWC_2,FP2,False)
	Average(1,EC_2,FP2,False)
	Average(1,T_2,FP2,False)
	Average(1,P_2,FP2,False)
	Average(1,PA_2,FP2,False)
	Average(1,VR_2,FP2,False)
	Average(1,TT_C,FP2,False)
	Average(1,SBT_C,FP2,False)
EndTable

'Main Program
BeginProg
	'Use SerialOpen to set RS232 options for Modbus Slave Instruction
	 SerialOpen(COMRS232,9600,3,0,1000)
	'Modbus Slave Instruction
	ModbusSlave(COMRS232,9600,1,Modbus(),ModbusCoil(),1)

	'Main Scan
	Scan(15,Min,1,0)
		'Default CR800 Datalogger Battery Voltage measurement 'BattV'
		Battery(BattV)
		'Default CR800 Datalogger Wiring Panel Temperature measurement 'PTemp_C'
		PanelTemp(PTemp_C,_60Hz)
		'CS650/655 Water Content Reflectometer measurements 'VWC_0', 'EC_0', 'T_0','P_0', 'PA_0', and 'VR_0'
		SDI12Recorder(CS65X(),1,"0","M4!",1,0,-1)
		'CS650/655 Water Content Reflectometer measurements 'VWC_1', 'EC_1', 'T_1','P_1', 'PA_1', and 'VR_1'
		SDI12Recorder(CS65X_2(),1,"1","M4!",1,0,-1)
		'CS650/655 Water Content Reflectometer measurements 'VWC_2', 'EC_2', 'T_2','P_2', 'PA_2', and 'VR_2'
		SDI12Recorder(CS65X_3(),1,"2","M4!",1,0,-1)
		'SI-111 Precision Infrared Radiometer measurements 'TT_C' and 'SBT_C'
		'Measure SI-111 sensor body thermistor temperature
		Therm109(SBT_C,1,1,1,0,_60Hz,1,0)
		'Measure SI-111 output of thermopile
		VoltDiff(TTmV,1,mV2_5,2,True,0,_60Hz,1,0,)
		'Calculate slope (m) and offset (b) coefficients for target temperature calculation
		m=1533330000+(9371930*SBT_C)+(101120*SBT_C^2)
		b=-6709130+(35411.6*SBT_C)+(3698.69*SBT_C^2)
		'Calculate target temperature using calculated slope (m) and offset (b)
		SBT_K=SBT_C+273.15
		TT_K=SBT_K^4+TTmV*m+b
		TT_K=SQR(SQR(TT_K))
		'Convert target temperature into desired units
		TT_C=TT_K-273.15
		'Call Data Tables and Store Data
		CallTable Hourly
		CallTable Daily
		'Copy values/measurements to Modbus Array
		Modbus(1)=VWC_0 * 100
		Modbus(2)=EC_0 * 100
		Modbus(3)=T_0 * 100
		Modbus(4)=P_0 * 100
		Modbus(5)=VWC_1 * 100
		Modbus(6)=EC_1 * 100
		Modbus(7)=T_1 * 100
		Modbus(8)=P_1 * 100
		Modbus(9)=VWC_2 * 100
		Modbus(10)=EC_2 * 100
		Modbus(11)=T_2 * 100
		Modbus(12)=P_2 * 100
		Modbus(13)=TT_C * 100
		Modbus(14)=SBT_C * 100
	NextScan
EndProg
